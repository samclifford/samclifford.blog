<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Git on Sam Clifford </title>
    <link>/./tags/git/</link>
    <language>en-us</language>
    <author>Alexander Ivanov</author>
    <updated>2014-03-05 00:00:00 &#43;0000 UTC</updated>
    
    <item>
      <title>Posterior samples</title>
      <link>/./2014/03/05/posterior-samples/</link>
      <pubDate>Wed, 05 Mar 2014 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2014/03/05/posterior-samples/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.ntnu.edu/&#34;&gt;NTNU&lt;/a&gt; in Trondheim, Norway, has &lt;a href=&#34;https://sites.google.com/a/r-inla.org/www/events/openphd-grants&#34;&gt;five PhD fellowships&lt;/a&gt; open. Visualising homicide rates in Mexico &lt;a href=&#34;http://lcolladotor.github.io/2014/02/26/excited-by-willingness-to-help-get-things-done/&#34;&gt;using R and GitHub&lt;/a&gt; (via &lt;a href=&#34;http://www.statisticsblog.com/2014/03/the-week-in-stats-mar-3rd-edition/&#34;&gt;Probability and Statistics Blog&lt;/a&gt;). If you’re in Melbourne, Australia, you should consider popping along to &lt;a href=&#34;http://thelaborastory.com/&#34;&gt;Laborastory&lt;/a&gt; at the Cider House (Brunswick), where five scientists get up on the first Tuesday of the month to tell the stories of the heroes and history of their field. A friend of mine went along this week and enjoyed it immensely. SEB113 has started again. I’ve already done 5 workshops (I have three a week). Introducing a whole new cohort of students to R, RStudio and ggplot. We did some paper plane throwing last week and had a look at how simple usage of faceting, colouring and stacking histograms can reveal both overall variation and group-to-group variation. A few students are still bewildered by the idea of writing code to make pictures but they recognise that it’s just a case of needing practice.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A proud moment</title>
      <link>/./2013/04/17/a-proud-moment/</link>
      <pubDate>Wed, 17 Apr 2013 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2013/04/17/a-proud-moment/</guid>
      <description>&lt;p&gt;Today a collaborator of mine started the outline of a new paper in LaTeX, put it on our git repository and emailed it as a PDF file to other people who will be co-authors on this paper. The text of the email included:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I wrote this in LaTeX, which generates pdf files. Therefore, I do not have a Word document for this. Apologies for any inconvenience this may cause.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I’ve been working with this collaborator to get them using Github, R and LaTeX . There was the denial, the anger, bargaining, depression and ultimately acceptance. Watching this collaborator send this email I felt like a proud father watching their child graduate.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Posterior samples</title>
      <link>/./2012/11/23/posterior-samples/</link>
      <pubDate>Fri, 23 Nov 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/11/23/posterior-samples/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://littlestat.com/&#34;&gt;&lt;span style=&#34;line-height:12px;&#34;&gt;LittleStat is an online R tool for simple data analysis&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.readmatter.com&#34;&gt;Matter&lt;/a&gt; is a new essay-based science/tech publication that got its start on &lt;a href=&#34;http://www.kickstarter.com/projects/readmatter/matter/&#34;&gt;Kickstarter&lt;/a&gt; - this issue is about people who feel like they have an extra limb.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://0fps.wordpress.com/2012/11/19/conways-game-of-life-for-curved-surfaces-part-1/&#34;&gt;Conway’s Game of Life as a smooth PDE system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://statisticalsocietyaustralia.wordpress.com/2012/11/20/november-question/&#34;&gt;SSAI wants to know what the biggest challenges in modern Bayesian statistics are&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/RUG/2012/11/video-simpler-tricks-and-tools-help-debugging-git-latex-and-workflow-with-r-by-prof-rob-hyndman/&#34;&gt;SimpleR tricks and tools: Help, debugging, git, LaTeX, and workflow with R by Prof Rob Hyndman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>/./2012/11/21/github/</link>
      <pubDate>Wed, 21 Nov 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/11/21/github/</guid>
      <description>&lt;p&gt;GitHub for Windows can be such a pain sometimes. I guess it’s partially my fault for attempting to use version control on the compiled PDF of a LaTeX document, but I spent a fair amount of time today attempting to fix up a colleague’s local repository. I’m now a bit more familiar with cherry-pick and rebase but it would have been nice to have it just work. For some reason, GitHub for Windows on this colleague’s computer simply &lt;em&gt;will not sync properly&lt;/em&gt;; my colleague has had to become a bit more familiar with the common commands (push, pull, fetch, commit, merge). It works fine on their Mac, though. I run GitHub for OS X at home and it’s an absolute dream. At work (Windows XP) I have had no end of trouble with various programs like TortoiseGit. I think when I start my post-doc I’ll organise to have my computer converted to a Linux system. After all that, though, we did make some pretty good progress on the modelling in this paper. I’m not quite sure which journal we’ll be sending it to but it’s a really nice piece of work with some personal monitoring data, simple but informative analysis and some very creative use of the base graphics system in R.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git used to write high school maths textbook</title>
      <link>/./2012/10/02/git-used-to-write-high-school-maths-textbook/</link>
      <pubDate>Tue, 02 Oct 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/10/02/git-used-to-write-high-school-maths-textbook/</guid>
      <description>&lt;p&gt;As a mathematician who uses git and LaTeX to collaboratively write papers with Finnish researchers, the following story is really neat. &lt;a href=&#34;http://linja-aho.blogspot.fi/2012/09/a-group-of-finnish-math-teachers-write.html&#34;&gt;A group of Finnish mathematicians, students and teachers got together and hacked out a draft upper secondary school level mathematics textbook&lt;/a&gt;. There’s still some tidying up to be done but a snapshot’s available &lt;a href=&#34;http://cloud.github.com/downloads/linjaaho/oppikirjamaraton-maa1/version-0.9.pdf&#34;&gt;here&lt;/a&gt;. &lt;a href=&#34;https://github.com/linjaaho/oppikirjamaraton-maa1/&#34;&gt;The collaborators used git&lt;/a&gt; to weave together the various parts of the book, allowing them to work on separate sections of the book and feed them back to github. One of the benefits of something like git is that when two people work on the same section and both try to commit their changes it flags the conflict and forces you to resolve it. Using Google Docs to collaborate like this leads to people getting in each others’ way and overwriting each other. Using Dropbox results in a forked version of the conflicted file with no sensible way to resolve the conflict. If you read the comments in their blog post you’ll see stories of other researchers doing similar work to create books. That the Finns are releasing their book under a CC-BY license means that others can take their work, &lt;a href=&#34;https://github.com/linjaaho/oppikirjamaraton-maa1/network&#34;&gt;fork the git repository&lt;/a&gt; and derive and compile their own versions of the book. If you speak Finnish, &lt;a href=&#34;https://www.facebook.com/oppikirjamaraton&#34;&gt;their Facebook page&lt;/a&gt; might also be of interest.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Minimal version control lesson - use it</title>
      <link>/./2012/07/31/minimal-version-control-lesson---use-it/</link>
      <pubDate>Tue, 31 Jul 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/07/31/minimal-version-control-lesson---use-it/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.win-vector.com/blog/2012/07/minimal-version-control-lesson-use-it/&#34;&gt;From the Win-Vector blog&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no excuse for a digital creative person to not use some sort of version control or source control. In the past disk space was too dear, version control systems were too expensive and software was not powerful enough; this is no longer the case. Unless your work is worthless both &lt;a href=&#34;http://www.win-vector.com/blog/2009/06/public-service-article-back-up/&#34;&gt;back it up&lt;/a&gt; &lt;em&gt;and&lt;/em&gt; version control it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is probably the best advice I can give anyone about why using git is a good idea. There’s no reason to take care of work that is not valuable. If you’re doing any kind of research that requires writing, back it up and use version control (especially if you’re coding). The above article gives a nice, simple introduction to using git without heading off into lengthy discussions about the role of branches and how to fork repositories. Given that I’ve been encouraging people in my group to move into using git and R this might be a good article to pass around.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Changes in the way my group does work</title>
      <link>/./2012/07/19/changes-in-the-way-my-group-does-work/</link>
      <pubDate>Thu, 19 Jul 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/07/19/changes-in-the-way-my-group-does-work/</guid>
      <description>&lt;p&gt;Yesterday I had a 45 minute chat with two of the PhD students in my group about statistics. I had made some comments at one of their talks at Healthy Buildings about the summary statistics they were using for a ratio of indoor and outdoor particle concentrations and they wanted to catch up to discuss that and my first paper on using GAMs for temporal trends and meteorology. I think I’ve managed to convince both of them that using R is a good idea and that using spline models will help look at non-linear effects. They’re going to read some of the references that I listed. We also had a chat about how ANOVA’s a good start for data analysis and I suggested that they read Gelman’s paper (recently referred to in my &lt;a href=&#34;http://samclifford.info/2012/07/12/plenary-speech/&#34; title=&#34;Plenary speech&#34;&gt;plenary speech&lt;/a&gt;). I think the &lt;a href=&#34;http://cran.r-project.org/web/packages/openair/index.html&#34;&gt;openair&lt;/a&gt; package is something they might look at given one of the other students in their room uses it. Openair uses mgcv to do some of its non-parametric estimation. I’m also starting a paper with one of our postdocs looking at personal exposure to ultrafine particles. We’ve got some very interesting data from quite a new instrument and the way the experiment was designed we are going to be able to answer some very interesting questions. The colleague who will probably be the primary author has to move back overseas for at least a few months so we’ll be collaborating from across an ocean or two. Our meetings recently have involved having an instance of R open to look at some data and a LaTeX document for writing down what we decide. Our postdoc asked me to email them the file but instead we sat down and set up a GitHub account and I showed that it wasn’t particularly hard to operate git in terms of basic functionality. They’ve used MATLAB before and have been getting used to using R, so this shouldn’t be too hard for them. So it’s nice to see a few little changes here and there not just in terms of how we approach a problem but with the tools we use to make our jobs easier and to improve the quality of our output.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Just a few quick thoughts</title>
      <link>/./2012/06/19/just-a-few-quick-thoughts/</link>
      <pubDate>Tue, 19 Jun 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/06/19/just-a-few-quick-thoughts/</guid>
      <description>&lt;p&gt;I’m setting up a laptop to take to ISBA with me as I have lots of thesis work to do. I must say, I’m really impressed with GitHub for Windows in regards to how simple it is to set up. It’s a matter of installing the program itself, then entering your github details. Cloning your GitHub repositories to your local machine is as simple as pressing a button. I haven’t had to faff about with ssh, pageant, etc. Now I just have to finish setting up remote INLA (which will require faffing about with ssh), installing LaTeX and figuring out if I can use X forwarding without X-Win. I also have to finish my ISBA poster and organise for it to be printed. Then there’s the two talks I am giving at Healthy Buildings 2012 which need writing and the Student Program work. I leave for Japan on Sunday. I should probably look at train travel from Osaka to Kyoto, find my travel money card, passport, etc. I uploaded a paper to arXiv yesterday. I’ll post about it here when it appears.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LaTeX and git</title>
      <link>/./2012/06/13/latex-and-git/</link>
      <pubDate>Wed, 13 Jun 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/06/13/latex-and-git/</guid>
      <description>&lt;p&gt;At the request of ihrhove I’ve decided to talk a little bit about using git and LaTeX together. I currently have two private git repositories; one for the Finnish paper and the other for all of my thesis work. I’ve talked previously about the Finnish paper so I’ll give a brief overview of how I use it with my thesis but you’ll need to keep in mind that I don’t have it shared with anyone because my supervisors don’t use git and nor do they edit the documents I work on directly (two print out draft papers and write on them, the third (who has used CVS/SVN in the past) uses Foxit to annotate PDFs directly and send them back to me. To start (and possibly end, if you’re easily convinced) with, LaTeX is just code. So to me there’s no reason why you can’t use any service you’d normally use for code for LaTeX. Everything that is directly being used in a paper comes under my version control with git. Each paper in my thesis repository has its own folder. Within that folder there is a LaTeX subfolder, where I keep everything needed for the writing of the paper, and an R or MATLAB folder depending on what program I’m using to do the modelling (and all the code goes into the repository). Within the LaTeX folder I have a whole bunch of .tex files and a folder where I store the images to be included in the paper. One of my favourite commands in LaTeX is . Every section in a paper has its own LaTeX source file. I find that this helps me navigate my work when I’m writing, especially when making corrections. Each file gets worked on separately and I save frequently. If I’m finished dealing with a section or I’m heading off for a break I will save everything and commit the current changes with a note about which section I’ve been focussing on. I picked this based writing up in my Honours degree when I got sick of having screen after screen of text. If I want to omit a section in a draft I can just comment out the line. Reorganising sections and maybe even subsections, becomes an issue of swapping two or three lines of LaTeX rather than copying and pasting giant blocks of text. I’m a sucker for vector graphics so I will use PDF graphs and pdflatex wherever I can. Occasionally I succumb to using PGF/TikZ for a while but usually have to generate so many different styles of plots that I don’t bother. So anyway, PDF graphics. These are really quite small and can be stored in git no trouble at all. I know git’s more or less useless for version control and revision of binary files (but PDF and EPS files are quite different) but I find it useful to be able to overwrite my graphs and still have the older versions available through reverting to a previous commit rather than making endless folders called “oldgraphics”. The root of my thesis repository has a folder called “Bibliography” which is where a monolithic bibtex file called “allpapers.bib” is stored. Because I will cite the same references across multiple papers I find the idea of having separate bibliography databases a bit silly. I use JabRef to edit this, by the way. All my \bibliography commands point to ../../Bibliography/allpapers.bib. I’ve even got a template for papers with that line in it so that I don’t even have to think about how I do my referencing. With regards to the Finnish paper, this compartmentalisation reduces, even further, the risk of conflicts. Committing changes to one section at a time means the commit messages are often quite descriptive without having to be quite long. The mixture of a few lines of changes and a brief summary means it’s easy to see what’s happened in the changelog. I also use git to keep track of side projects that have popped up during my thesis. Coworkers will often come to me with a question about some data analysis or if I can write a script to make a certain repetitive task as automatic as possible. Each coworker gets a subfolder within a /Side Projects/ folder and within those there are folders for each little project. If I worked in a group where use of git was widespread I would consider making a separate project for each person and inviting them as a collaborator. I kind of wish that QUT had a git server (the school of IT had a subversion server but I really dislike SVN after discovering git) and that scientists were encouraged to use R/MATLAB/SAS for their statistics and modelling instead of Excel. I think it’d a great way to foster collaboration and have people be able to work on a project and make changes, share their code with their coworkers, etc. without sending code and draft papers around via email. Actually a private git server without the account level limitations that github imposes would be an invaluable tool, especially if you could just open up your repositories to the QUT community to show what you’re doing and provide colleagues with usable code for statistical analysis, image manipulation tools, etc. And if someone within the university came across your work and liked it, you would potentially have another paper to work on within the uni.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ad hoc collaboration</title>
      <link>/./2012/06/05/ad-hoc-collaboration/</link>
      <pubDate>Tue, 05 Jun 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/06/05/ad-hoc-collaboration/</guid>
      <description>&lt;p&gt;Rbloggers have &lt;a href=&#34;http://www.r-bloggers.com/announcing-rpubs-a-new-web-publishing-service-for-r/&#34;&gt;announced the launch&lt;/a&gt; of &lt;a href=&#34;http://www.rpubs.com/&#34;&gt;RPubs&lt;/a&gt;, a free service which makes it easy to publish code and analysis on the web. It’s based on RStudio and the markdown package and looks like a great way for people to show analysis to co-workers who might not have R on their computers when you don’t feel like writing a report. I really like this idea and might end up using it in my office to show what we can do with statistics. Another thing I’ve been thinking about is the potential to use an Apple TV and its &lt;a href=&#34;http://www.apple.com/au/appletv/airplay/&#34;&gt;screen sharing&lt;/a&gt; capabilities to do presentation work from iPhones, iPads and Mac computers. A lot of people in my office have iPhones, so an Apple TV hooked up to a HDMI screen (surely universities just leave these lying around) might be a good way to get a group of people to take some notes or share prepared slides with a small room of people. For example, if people had a PDF version of slides on their iPhones they could take control of the Apple TV and use their iPhone to flick through the slides, allowing everyone to stay in their seats and control the slideshow from their own device. I was excited by Google Wave when it first launched, as it combined a lot of what I liked about Gmail, Google Docs and Google Chat with an extension system, making it an incredibly powerful and flexible platform for collaborative work. Unfortunately it was released prematurely and died off after a flurry of uptake. Google Plus doesn’t really make up for it, either. I really liked the idea of collaboratively writing a document and being able to add in a voting gadget to resolve whether a section should be included. I used it socially to determine the dates of picnics with friends, which was probably where most of my use was directed. Probably the best example of how useful I found it was in writing a manual of procedures with about ten other volunteers who would ask questions. As we answered the questions, we folded the answers into the main part of the document. This was much more useful than writing a static document and then having a separate email list for discussion, or using track changes in Microsoft Word to email around a huge document that kept on growing. I have high hopes for the internet in terms of &lt;em&gt;ad hoc&lt;/em&gt; collaboration, particularly academic collaboration. I find &lt;a href=&#34;http://github.com/&#34;&gt;GitHub&lt;/a&gt; really exciting because it allows me to work on a private project and then add a collaborator when they come on board. Once a project is finished and the paper published, that private repository can be made public and anyone can fork it and do with it what they will. If they’re intrigued by what’s been done, they could contact me and discuss what they’ve done and we can build a new project based on their fork of my work. With so much of my work being based on R or MATLAB and written up in LaTeX, I find this potential way of working quite sensible. Add in the fact that GitHub gives you a wiki system for each project and you’ve got a great tool at your disposal. A somewhat &lt;em&gt;ad hoc&lt;/em&gt; collaborative tool that I organised is the &lt;a href=&#34;https://wiki.qut.edu.au/display/npbayes/Home&#34;&gt;wiki for QUT’s Bayesian Non-parametrics reading group&lt;/a&gt;. This is a repository for the collective work of the group, including Q&amp;amp;A on the papers we’re reading, notes from the meetings, a list of papers read, code chunks, links to videos explaining what we’re working on, etc. It’s been a really useful tool and I’d hope that others interested in the same work could use it as a resource for their own learning. There’s a lot of really cool stuff out there. It’s a matter of finding useful tools that don’t have particularly high barriers to entry and allow non-experts to view expertly produced material (like on RPubs). The longer it’s been since one was a student, the less likely one seems to be to adopt new workflow practices. I’ve suggested git to my supervisors as a good way for our groups to work but I have a feeling that none of them are interested enough in distributed version control to put the effort in to learning how to use them. So for now it’s annotated PDFs or printed pages with scribbles on them rather than making the edits to a LaTeX source file and committing and pushing their changes to a shared repository.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working on this Finnish paper</title>
      <link>/./2012/06/05/working-on-this-finnish-paper/</link>
      <pubDate>Tue, 05 Jun 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/06/05/working-on-this-finnish-paper/</guid>
      <description>&lt;p&gt;I figured I might as well describe how git made it possible to write the code and paper for the work I’ve been doing with Bjarke, Tareq, Kaarle and Jukka. Without git, we’d probably have been emailing code back and forth to each other or using something like Dropbox which would freak out over all the little changes we make, making it impossible to both be working on the same file at once. &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; is a distributed version control system that allows you to track revisions to your code and invite multiple collaborators to the project. I’ve talked about it &lt;a href=&#34;http://samclifford.info/tag/git/&#34;&gt;previously&lt;/a&gt; but basically it’s this great system where you can work on a project with multiple people, making your changes, committing them on your local machine to save them. Once you are happy with the changes you’ve made and they don’t break anything, you can push the changes to the shared repository where all the other members of the project have access to them. If there’s a conflict, git lets you know and you can fix it up then re-commit and push. There are tools for reverting changes, making new branches, merging branches, etc. June 13 2011. It’s still three weeks before I’m due to arrive in Finland. I upload the code from the book chapter on Bayesian Splines that I’ve been writing for BRAG. Bjarke and I spend a bit of time emailing back and forth about how splines work, as he hasn’t used them in a regression framework before. Bjarke has sent me a copy of the draft of his paper on a GLM with autoregressive residuals. I’ve still got the 8BNP workshop to attend before arriving in Finland. July 5 2011. I arrive in Finland and meet Tareq and Bjarke for a meeting. We take a copious amount of notes during a long discussion where we set out what we want to achieve long term and what we want to have finished by the time I leave. The aim is to at least have some working code that combines my splines with Bjarke’s code that does autoregressive residuals. July 6 2011. Bjarke’s code is added to the git repository and we get to work understanding what the other person has written. We’re both still getting to grips with how git works and end up accidentally making new branches. I spend most of my time annotating code so that I know where to look when things inevitably go wrong. Time is spent ensuring we have ways of visualising our results so we know if things are going totally wrong. July 7-8 2011. We spend the next few days attempting to stitch the code together. Bjarke doesn’t use Google Chat or Facebook so there’s a little email correspondence at this time but it’s mostly office conversations. July 9-10 2011. No work happens here as Bjarke and I are holidaying with his in-laws for the weekend at a summer cottage near Lappeenranta (near the Russian border). July 11-16 2011. This is the most creative and chaotic period of working on the paper. Notes are made on A4 paper, transcribed as notes in a text file on git when they are worth following up and abandoned when they don’t lead anywhere. We start really getting to grips with multivariate splines, Metropolis-within-Gibbs, testing out new ideas, making new branches, merging them when they work, deleting them when they don’t, scribbling maths out on pieces of paper and running up and down the corridors whenever there’s a breakthrough. July 19-31 2011. I return to Australia and we spend some time writing about what we managed to get done while I was overseas. We’re back to one branch and are largely discussing the methodology and making sure plotting works. August, September 2011. I continue making changes to the way autoregressive residuals are handled, Bjarke codes up some diagnostics and begins examining a wide range of model specifications for the air quality data we’re working with in order to come up with a way of illustrating how what we’ve done is so cool. October, November 2011. Some changes are made to the way the penalties are handled, the code becomes more functional and most of the focus is on plotting, diagnostics and model choice. Plots are saved as PDF files using &lt;a href=&#34;http://www.mathworks.com/matlabcentral/fileexchange/23629&#34;&gt;export_fig.m&lt;/a&gt; within our script and are brought under the control of git so that we can replace one set of results with another in a single commit. December 2011. Some radical changes are made to the way the autoregressive error structure is passed to the model, making it more flexible. These changes are contained in a separate branch so that Bjarke can continue working on his model comparison knowing that his code will continue to run. He checks it out and offers feedback. January 2012. A lot of work is done on making sure the paper explains what’s going on. A few more features are introduced and the code is commented heavily. February-April 2012. Bjarke spends a lot of time making sure the scripts to call the model fitting, forecasting and diagnostics work properly. May 2012. A draft paper is sent around for feedback, some changes to the description of the method are recommended, as are a few different model specifications. Development on the code itself has stopped but the diagnostics, plotting and inference continues. Much of the work is now happening on QUT’s supercomputer as competing models are tested. Writing about the autoregressive errors is filled out a bit to ensure that the forecasting is highlighted. June 2012. The paper is almost finished. We’re waiting on feedback from a co-author who has been quite sick. There have been some large rewrites based on Kerrie’s feedback, mostly to change the order so that it’s a punchier article which highlights the novelty of the method rather than me just talking about how cool splines are. Support is being canvassed among the authors for uploading the draft to arXiv and releasing the code once the paper is published. And that’s where we stand at the moment. Hopefully I can make the git repository public and you can have a look at what’s happened and where we’ve come from with this. It might need a bit of pruning first to make sure that no data that shouldn’t be publicly available isn’t accidentally made public. There’s a minimal working example in the code where we simulate some data, so hopefully that’s enough to demonstrate what we’ve done. There are some really neat ways of visualising the work done on GitHub, including a network diagram of the committed changes and branches, contributions of each person over time, when commits occur most frequently, what (programming) languages the project uses and how frequent additions and deletions occur (and therefore the growth rate of the project). I hope this sheds some light on the process that’s been used. GitHub was basically a way for the QUT and Helsinki groups to collaborate, with Bjarke and I acting as the conduits for reviews and comments. Git allowed us to write a whole bunch of code together, following up all sorts of crazy ideas without getting in each others’ way. The paper was written as we went and is subject to the same version control (after all, LaTeX is code too). I have found it a really great way of working. I’d like to see how it goes with a few more people programming and whether I can work with a few other people to try to make the changes to the paper directly via git rather me making the changes based on notes scribbled on a printed copy. P.S. Wow, I can’t believe it’s been nearly a year since we started working on this. Well, I can, as we had a few delays where it turned out we needed to rewrite large chunks of code and the paper. P.P.S. I just managed to merge the development branch with the modified way of dealing with the residuals back into the master branch without there being any conflicts. I didn’t expect conflicts but it’s nice to know that everything’s back in the master branch. Below is an image of the commit history. It doesn’t show the number of changes in each commit, but given that commits occur when an idea has been tested or a section written, it’s a good indication of a parcel of working being done. &lt;a href=&#34;commits.png&#34;&gt;&lt;img src=&#34;http://samcliffordinfo.files.wordpress.com/2012/06/commits.png&#34; title=&#34;commits&#34; alt=&#34;Committed changes for the Finnish paper&#34; /&gt;&lt;/a&gt; For interest’s sake &lt;a href=&#34;https://maps.google.com/maps/ms?msid=205578669134200940456.0004a7be06572cca98eec&amp;amp;msa=0&#34;&gt;here’s a map of my time in Finland&lt;/a&gt;. I haven’t got the exact location of the summer cottage but it’s near Taipalsaari. Here’s &lt;a href=&#34;https://plus.google.com/photos/106543548808921798128/albums/5637271904465537361?authkey=CIOgldL52du6vAE&#34;&gt;my collection of photos from my time in Finland&lt;/a&gt;. I had originally uploaded them to Facebook and given detailed captions but the move to Google Plus ended up removing the captions. Leave a comment on them asking a question if you want to know more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bioaerosols and lab reorganisation</title>
      <link>/./2012/05/22/bioaerosols-and-lab-reorganisation/</link>
      <pubDate>Tue, 22 May 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/05/22/bioaerosols-and-lab-reorganisation/</guid>
      <description>&lt;p&gt;Yesterday I had a meeting with my supervisor and two colleagues about looking at the microbiological measurements we’ve been taking as part of UPTECH. It was an interesting meeting if only for the chance to really see how the four of us are approaching this paper from the point of view of our backgrounds. Heidi Salonen, who has been working on microbiology with us since Caroline Duchaine went back to Canada, will be the lead author on the paper. She’s got a background in OH&amp;amp;S and this was really clear when she was talking about the need to quantify safe levels of microbiology. I was sitting there asking the questions that will shape the data analysis, like what sort of relationships we anticipate. Mandana Mazaheri was focussing on making use of the rest of the UPTECH data as best we can (we have a huge Access database) and Lidia Morawska was making sure none of us got carried away and that we could agree on an approach. I’m going to use this paper as an opportunity to push R as our statistical engine rather than Excel (which is all that scientists seem to use). I’m being brought on as the statistician and really don’t want to about learning how to use Excel and write VBA to do the things that can be done trivially in R. R’s plots are a lot better than what we tend to see in Excel and Mandana and I have been learning how polygon() works so we can shade the region between two particle diameter distributions in a plot for a report she’s working on. Mandana’s actually been quite good about learning R and seems to have stuck with it more than a lot of the other PhD students (except for Farhad Salimi, who is doing some really interesting work). I’d really like to use this paper as an opportunity to have people use git but Mandana and Heidi aren’t programmers, and I think even using R is going to stretch them. A &lt;a href=&#34;windows.github.com&#34;&gt;Windows GUI for git&lt;/a&gt; was released recently and I’m finding it better for committing and pushing than TortoiseGit or the command line git client as neither of these deal with my ssh keys particularly well. I don’t know what the deal is there. Perhaps it’s better under a more modern version of Windows. I also spent some time in the lab today helping reorganise it. Me being in the lab is a rarer event than the &lt;a href=&#34;http://www.bbc.co.uk/news/18141625&#34;&gt;recent annular eclipse&lt;/a&gt;. I don’t work in the lab and so am not responsible for the mess left over from experiments and not putting things away when I’m done, but I do rely on the lab’s monitoring data so it’s only fair that I help out from time to time. Just don’t ask me to help out with any of the science.&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;http://knowyourmeme.com/photos/234739-i-have-no-idea-what-im-doing&#34;&gt;&lt;img src=&#34;fa5.jpg&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>/./2012/05/16/linux/</link>
      <pubDate>Wed, 16 May 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/05/16/linux/</guid>
      <description>&lt;p&gt;I swear, when I finish this PhD and start my new position I’ll either be asking for a Mac or installing Linux on my current computer. A lot of my work at the moment revolves around remotely connecting to the university’s supercomputer and using git to do version control for documents stored locally. Both of these require decent ssh and X forwarding and I am sick to death of the way Windows XP deals with both of these .The faculty was going to upgrade us all to Windows 7 but then it got merged with another faculty and I guess it slipped down the list of priorities. I’ve used Mac OS X and/or Linux as my home operating system for quite a while now (must be at least ten years) and while I’m generally okay to use Windows and there are some nice implementations of the programs I need to use (LaTeX, MATLAB, RStudio), the fact is that these programs are available on other operating systems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A mostly Fin(n)ish[ed] paper</title>
      <link>/./2012/05/09/a-mostly-finnished-paper/</link>
      <pubDate>Wed, 09 May 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/05/09/a-mostly-finnished-paper/</guid>
      <description>&lt;p&gt;The paper I started with some collaborators in Finland (&lt;a href=&#34;https://tuhat.halvi.helsinki.fi/portal/en/persons/bjarke-moelgaard(74a8081d-a379-4e4b-9aff-e9b85bc98c78)/publications.html&#34;&gt;Bjarke Mølgaard&lt;/a&gt;, &lt;a href=&#34;http://www.rni.helsinki.fi/~jic/&#34;&gt;Jukka Corander&lt;/a&gt;, &lt;a href=&#34;http://www.atm.helsinki.fi/~khameri/&#34;&gt;Kaarle Hämeri&lt;/a&gt;, &lt;a href=&#34;https://tuhat.halvi.helsinki.fi/portal/en/persons/tareq-hussein(3aacf8e7-f431-41b0-9303-1abaf1897bf7)/publications.html?page=5&amp;amp;rendering=vancouver&#34;&gt;Tareq Hussein&lt;/a&gt;) almost a year ago is nearly done. It’s been nearly done a few times, but now all that remains is to do a little bit of model choice regarding the separability of the effects of meteorology on ultrafine particle number concentration. We’ve been using git to send the paper and code back and forth (well, Bjarke and I have) and I’ve found that to be a really simple way of collaboratively writing code and a paper. To see the changes made, one need only look at the commit details. Much nicer than using tracked changes in Word and emailing a bunch of versions of the same file back and forth and trying to do complicated merges of changes. I am really looking forward to submitting this paper, as it’s probably the most methodological work I’ll get out of my PhD (the other papers are largely applications of some novel techniques to the UPTECH project’s data). It’s quite a nice blending of the &lt;a href=&#34;https://tuhat.halvi.helsinki.fi/portal/en/publications/forecasting-sizefra(9c6ae07d-af34-4909-a4f9-d758bc7a4795).html&#34;&gt;work done by the Finnish authors previously&lt;/a&gt; [1] as part of Bjarke’s PhD and some of the ideas in my first paper [2]. While I don’t know that it will totally revolutionise atmospheric modelling (in the way that I’m sure we all hope it will), it’s quite a nice technique that increases the flexibility of the Generalised Additive Model and hopefully encourage anyone interested in doing Bayesian modelling with the GAM to stop using &lt;a href=&#34;http://www.uow.edu.au/~mwand/&#34;&gt;Matt Wand&lt;/a&gt;’s WinBUGS approach [3, 4]. To be clear, I find GAMs in WinBUGS particularly cumbersome to code given that WinBUGS doesn’t deal with matrix operations very well and the use of P-splines requires a lot of matrix operations. Having said that, though, Wand’s code is a nice intro to Bayesian splines where you don’t have to write your own MCMC sampler. I just think it has some limitations that are not easily overcome. I’d like to present this to a statistics conference but it wasn’t anywhere near ready enough to demonstrate at ISBA 2012 when I was submitting an abstract. [1] B. Mølgaard, T. Hussein, J. Corander, K. Hämeri, Forecasting size-fractionated particle number concentrations in the urban atmosphere, Atmospheric Environment, Volume 46, January 2012, Pages 155-163, ISSN 1352-2310, 10.1016/j.atmosenv.2011.10.004. &lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S1352231011010491&#34;&gt;ScienceDirect&lt;/a&gt; [2] S. Clifford, S. Low Choy, T. Hussein, K. Mengersen, L. Morawska, Using the Generalised Additive Model to model the particle number count of ultrafine particles, Atmospheric Environment, Volume 45, Issue 32, October 2011, Pages 5934-5945, ISSN 1352-2310, 10.1016/j.atmosenv.2011.05.004. &lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S1352231011004766&#34;&gt;ScienceDirect&lt;/a&gt; [3] C. M. Crainiceanu, D. Ruppert. M. P. Wand, Bayesian Analysis for Penalized Spline Regression Using WinBUGS, &lt;a href=&#34;http://www.jstatsoft.org/v14/i14/&#34;&gt;Journal of Statistical Software, Volume 14, Issue 14, September 2005&lt;/a&gt;. [4] J. K. Marley, M. P. Wand, Non-Standard Semiparametric Regression via BRugs, &lt;a href=&#34;http://www.jstatsoft.org/v37/i05&#34;&gt;Journal of Statistical Software, Volume 37, Issue 5, November 2010&lt;/a&gt;. P.S. I apologise for the awful pun, but &lt;a href=&#34;http://en.wikipedia.org/wiki/The_Micallef_P(r)ogram(me)&#34;&gt;Shaun Micallef&lt;/a&gt; has been on my mind recently.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dear Mr Supercomputer</title>
      <link>/./2012/04/17/dear-mr-supercomputer/</link>
      <pubDate>Tue, 17 Apr 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/04/17/dear-mr-supercomputer/</guid>
      <description>&lt;p&gt;After ensuring that my colleagues were pushing their results to our git repository it’s now all steam ahead on this Finnish paper. I’ve got my MATLAB code running on the QUT supercomputer right now. It’s all very exciting watching it go and not run out of memory. Hopefully I can get these results sorted, do some model comparison, plotting and then send the document around for some final drafting within the next two or three weeks (the bulk of the theory section of the paper is finished). It would’ve been nice to be able to present this work at ISBA but I think I’d rather talk about the applied paper that discusses the spatio-temporal trends from the UPTECH project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git</title>
      <link>/./2012/03/14/git/</link>
      <pubDate>Wed, 14 Mar 2012 00:00:00 UTC</pubDate>
      <author>Alexander Ivanov</author>
      <guid>/./2012/03/14/git/</guid>
      <description>&lt;p&gt;A while ago I decided that it’d be worth ensuring that my PhD work was backed up on something other than my work computer. This ended up involving copying my work to my folder on a network drive, a Dropbox account and a portable hard drive, none of which were automated. I could have automated my use of Dropbox by working in my Dropbox folder, but that would be an awful lot of writing files over the internet whenever my LaTeXed papers were changed, whenever I saved an R data frame, etc. I eventually settled on &lt;a href=&#34;http://git-scm.com/&#34;&gt;git&lt;/a&gt;. While it’s not automated, it relies on committing changes rather than copying files. I find this a much more intuitive way of backing up code. When it’s worth keeping, commit it and push the changes. I’d previously worked with &lt;a href=&#34;http://subversion.tigris.org/&#34;&gt;SVN&lt;/a&gt; in undergrad and so git wasn’t a huge jump, and I really love the idea of version control as part of a backup strategy, because you will break your code. Probably the best part of using git is the &lt;a href=&#34;https://github.com/&#34;&gt;github&lt;/a&gt; website, where people can list open projects that you can fork and develop (like &lt;a href=&#34;https://github.com/rdenham/pymcmc&#34;&gt;pyMCMC&lt;/a&gt;, a python module for Bayesian inference, except this hasn’t been pushed publicly in about a year and I know they’re still working on it). I use git for two reasons&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;backing up and controlling versions of all the R, MATLAB and LaTeX files that are part of my PhD work&lt;/li&gt;
&lt;li&gt;collaborating on a project with someone who lives in Finland (MATLAB and LaTeX again)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So all my work is backed up online and I can share a project with my collaborator without fiddling around with permissions on my PhD project. I’m considering paying for the next level of account so that I can make a git project for each paper that I’m working on. If I go down this route, I would consider making such a project public once I have published the paper(s) that come out of that code. I really like the idea of social coding and think it would be a fascinating tool within a university context. I don’t know how much QUT does it at the moment, but if there was an internal github-type server where QUT researchers/students could host their code it would reduce the amount of code going back and forth over email. and make it much easier to bring people on to code-based projects. I have a feeling the Computer Science and Information Systems could well be using something like this (perhaps on a smaller scale and not for facilitating collaboration) but I think the mathematics, statistics and physics (they do computer simulations) academics could make use of these sorts of tools to increase the research capacity of the university.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
